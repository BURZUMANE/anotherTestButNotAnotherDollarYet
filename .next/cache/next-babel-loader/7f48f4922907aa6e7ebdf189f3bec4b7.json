{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layout\";\nimport { NewsProvider } from \"../mobx/newsContext\";\nimport { useNewsStore } from \"../mobx/newsContext\";\nimport { NewsList } from \"../components/NewsList\";\nimport { Paggination } from \"../components/Paggination\";\nimport URL from \"../config\"; // description\n\nconst StoreContext = React.createContext();\n\nconst BugsForm = () => {\n  const store = useNewsStore();\n  const [bug, setBug] = React.useState({\n    title: \"\"\n  });\n  return __jsx(\"form\", {\n    onSubmit: e => {\n      store.addBug(bug);\n      setBug({\n        title: \"\"\n      });\n      e.preventDefault();\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: bug.title,\n    onChange: e => {\n      const value = e.target.value;\n      setBug(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        title: value\n      }));\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Add\"));\n};\n\nconst Wrapper = ({\n  children,\n  props\n}) => {\n  const store = useNewsStore();\n  store.getNews(props.data);\n  ;\n  return __jsx(React.Fragment, null, children);\n};\n\nconst Index = props => {\n  console.log(typeof props.currentPage);\n  const actualPage = props.currentPage || 1;\n  return __jsx(NewsProvider, null, __jsx(Wrapper, {\n    props: props\n  }, __jsx(Layout, null, __jsx(NewsList, null), __jsx(Paggination, {\n    currentPage: actualPage\n  }))));\n};\n\nIndex.getInitialProps = async context => {\n  const query = \"corona\";\n  const page = +context.query.page || 1;\n  const res = await Fetch(`http://newsapi.org/v2/everything?apiKey=baf3b32ef95d4cd0803dcc5d7a5bf9b1&q=${query}&page=${page}&pageSize=10&from=2020-06-15&sortBy=publishedAt&language=en`);\n  const posts = await res.json();\n  const postsCount = posts.totalResults;\n  const pages = Math.ceil(posts.totalResults / 10);\n  return {\n    totalCount: postsCount,\n    pageCount: pages,\n    currentPage: +context.query.page,\n    perPage: 10,\n    data: posts.articles\n  };\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}