{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layout\";\nimport { NewsProvider } from \"../mobx/newsContext\";\nimport { useNewsStore } from \"../mobx/newsContext\";\nimport { NewsList } from \"../components/NewsList\";\nimport { Paggination } from \"../components/Paggination\";\nimport URL from \"../config\"; // description\n\nvar StoreContext = React.createContext();\n\nvar BugsForm = function BugsForm() {\n  var store = useNewsStore();\n\n  var _React$useState = React.useState({\n    title: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bug = _React$useState2[0],\n      setBug = _React$useState2[1];\n\n  return __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      store.addBug(bug);\n      setBug({\n        title: \"\"\n      });\n      e.preventDefault();\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: bug.title,\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      setBug(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          title: value\n        });\n      });\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Add\"));\n};\n\nvar Wrapper = function Wrapper(_ref) {\n  var children = _ref.children,\n      props = _ref.props;\n  var store = useNewsStore();\n  store.getNews(props.data);\n  ;\n  return __jsx(React.Fragment, null, children);\n};\n\nvar Index = function Index(props) {\n  console.log(typeof props.currentPage);\n  var actualPage = props.currentPage || 1;\n  return __jsx(NewsProvider, null, __jsx(Wrapper, {\n    props: props\n  }, __jsx(Layout, null, __jsx(NewsList, null), __jsx(Paggination, {\n    currentPage: actualPage\n  }))));\n};\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var query, page, res, posts, postsCount, pages;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = \"corona\";\n            page = +context.query.page || 1;\n            _context.next = 4;\n            return Fetch(\"http://newsapi.org/v2/everything?apiKey=baf3b32ef95d4cd0803dcc5d7a5bf9b1&q=\".concat(query, \"&page=\").concat(page, \"&pageSize=10&from=2020-06-15&sortBy=publishedAt&language=en\"));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            posts = _context.sent;\n            postsCount = posts.totalResults;\n            pages = Math.ceil(posts.totalResults / 10);\n            return _context.abrupt(\"return\", {\n              totalCount: postsCount,\n              pageCount: pages,\n              currentPage: +context.query.page,\n              perPage: 10,\n              data: posts.articles\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}