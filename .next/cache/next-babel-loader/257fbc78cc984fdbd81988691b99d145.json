{"ast":null,"code":"var _jsxFileName = \"/Users/timurzakirov/Desktop/stupido/anotherTestButNotAnotherDollarYet/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layout\";\nimport { NewsProvider } from \"../mobx/newsContext\";\nimport { useNewsStore } from \"../mobx/newsContext\";\nimport { NewsList } from \"../components/NewsList\";\nimport { Paggination } from \"../components/Paggination\";\nimport URL from \"../config\"; // description\n\nconst StoreContext = React.createContext();\n\nconst BugsForm = () => {\n  const store = useNewsStore();\n  const [bug, setBug] = React.useState({\n    title: \"\"\n  });\n  return __jsx(\"form\", {\n    onSubmit: e => {\n      store.addBug(bug);\n      setBug({\n        title: \"\"\n      });\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: bug.title,\n    onChange: e => {\n      const value = e.target.value;\n      setBug(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        title: value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n};\n\nconst Wrapper = ({\n  children,\n  props\n}) => {\n  const store = useNewsStore();\n  store.getNews(props.data);\n  ;\n  return __jsx(React.Fragment, null, children);\n};\n\nconst Index = props => {\n  const {\n    pageCount,\n    currentPage\n  } = props;\n  const actualPage = currentPage || 1;\n  return __jsx(NewsProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    props: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(NewsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(Paggination, {\n    currentPage: actualPage,\n    pageCount: pageCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n};\n\nIndex.getInitialProps = async context => {\n  const query = \"bitcoin\";\n  const page = +context.query.page || 1;\n  const res = await Fetch(`https://newsapi.org/v2/top-headlines?country=us&apiKey=baf3b32ef95d4cd0803dcc5d7a5bf9b1&page=${page}&pageSize=10&sortBy=publishedAt&language=en`);\n  const posts = await res.json();\n  const postsCount = posts.totalResults;\n  const pages = Math.ceil(posts.totalResults / 10);\n  return {\n    totalCount: postsCount,\n    pageCount: pages,\n    currentPage: +context.query.page,\n    perPage: 10,\n    data: posts.articles\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/timurzakirov/Desktop/stupido/anotherTestButNotAnotherDollarYet/pages/index.js"],"names":["React","Fetch","Layout","NewsProvider","useNewsStore","NewsList","Paggination","URL","StoreContext","createContext","BugsForm","store","bug","setBug","useState","title","e","addBug","preventDefault","value","target","prev","Wrapper","children","props","getNews","data","Index","pageCount","currentPage","actualPage","getInitialProps","context","query","page","res","posts","json","postsCount","totalResults","pages","Math","ceil","totalCount","perPage","articles"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layout\";\nimport { NewsProvider } from \"../mobx/newsContext\";\nimport { useNewsStore } from \"../mobx/newsContext\";\nimport { NewsList } from \"../components/NewsList\";\nimport  {Paggination}  from \"../components/Paggination\";\n\nimport URL from \"../config\";\n// description\nconst StoreContext = React.createContext();\n\nconst BugsForm = () => {\n  const store = useNewsStore();\n  const [bug, setBug] = React.useState({ title: \"\" });\n  return (\n    <form\n      onSubmit={e => {\n        store.addBug(bug);\n        setBug({ title: \"\" });\n        e.preventDefault();\n      }}>\n      <input\n        type=\"text\"\n        value={bug.title}\n        onChange={e => {\n          const value = e.target.value;\n          setBug(prev => ({ ...prev, title: value }));\n        }}\n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nconst Wrapper = ({ children, props }) => {\n  const store = useNewsStore();\n  store.getNews(props.data);\n;\n\n  return <>{children}</>;\n};\n\nconst Index = props => {\nconst {pageCount, currentPage} = props\n  const actualPage = currentPage || 1;\n  return (\n    <NewsProvider>\n      <Wrapper props={props}>\n        <Layout>\n          <NewsList />\n          <Paggination currentPage={actualPage} pageCount={pageCount}/>\n        </Layout>\n      </Wrapper>\n    </NewsProvider>\n  );\n};\n\nIndex.getInitialProps = async context => {\n  const query = \"bitcoin\";\n  const page = +context.query.page || 1;\n\n  const res = await Fetch(\n    `https://newsapi.org/v2/top-headlines?country=us&apiKey=baf3b32ef95d4cd0803dcc5d7a5bf9b1&page=${page}&pageSize=10&sortBy=publishedAt&language=en`,\n  );\n  const posts = await res.json();\n  const postsCount = posts.totalResults;\n  const pages = Math.ceil(posts.totalResults / 10);\n  return {\n    totalCount: postsCount,\n    pageCount: pages,\n    currentPage: +context.query.page,\n    perPage: 10,\n    data: posts.articles,\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}